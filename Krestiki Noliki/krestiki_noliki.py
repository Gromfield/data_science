# Функция вывода поля, элементы строк-списков разделяем пробелами, убираем скобки
def vyvod_polya():
    for i in range(4):
        print(' '.join(pole[i]))


# Функция ввода координат
def vvod_koordinat():
    print('Введите координаты')
    input_x, input_y = int(input('Столбец: ')), int(input('Строка: '))
    return input_x, input_y


# Функция проверки координат и их повторного ввода в случае ошибки
def coord_check(check_x, check_y):
    while not (0 <= check_x <= 2) or not (0 <= check_y <= 2):
        print('Неверные координаты')
        check_x, check_y = vvod_koordinat()
    return check_x, check_y


# Функция проверки заполнения ячейки
def field_empty(fne_pole, fne_x, fne_y):
    # Сохраняем строку, которую проверяем
    str_proverki = fne_pole[fne_y + 1]
    # проверяем элемент строки, который находится на позиции [fne_x + 1]
    return str_proverki[fne_x + 1] == '-'


# Создаем поле в виде списка строк-списков
pole = [
    [' ', '0', '1', '2'],
    ['0', '-', '-', '-'],
    ['1', '-', '-', '-'],
    ['2', '-', '-', '-']
]

# Печатаем пустое поле
vyvod_polya()

# Объявляем переменную счетчика ходов и переменную победы
turn = 1
win = False

# Начинаем цикл хода
while turn <= 9:

    # Объявляем ход крестиков или ноликов в зависимости от значения счетчика ходов
    if turn % 2 == 0:
        print('Ход ноликов')
    else:
        print('Ход крестиков')

    # Присваиваем переменным значения координат размещения крестика/нолика, введенным с клавиатуры
    hod_x, hod_y = vvod_koordinat()

    # Проверяем правильность указания координат
    hod_x, hod_y = coord_check(hod_x, hod_y)

    # Задаем переменную, в которой будем хранить заполняемую строку
    str_zapolnenia = pole[hod_y + 1]

    # Запускаем бесконечный цикл
    while True:

        # Проверяем, заполнена ли ячейка
        if field_empty(pole, hod_x, hod_y):

            # Если ячейка пустая, заполняем ячейку крестиком/ноликом
            if turn % 2 == 0:
                str_zapolnenia[hod_x + 1] = 'O'
            else:
                str_zapolnenia[hod_x + 1] = 'X'
            break

        else:
            # Сообщаем, если ячейка занята, просим ввести новые координаты
            print('Ячейка занята')
            hod_x, hod_y = vvod_koordinat()

            # Проверяем правильность ввода координат
            hod_x, hod_y = coord_check(hod_x, hod_y)

    if turn % 2 == 0:
        # Меняем значение строки на значение с результатом хода
        pole[hod_y + 1] = str_zapolnenia

        # Задаем переменные для проверки условий победы
        str_0 = pole[1]
        str_1 = pole[2]
        str_2 = pole[3]

        # Проверяем условия победы, если да, звершаем цикл
        if any([
            pole[1] == ['0', 'O', 'O', 'O'],
            pole[2] == ['1', 'O', 'O', 'O'],
            pole[3] == ['2', 'O', 'O', 'O'],
            (str_0[1] == 'O' and str_1[1] == 'O' and str_2[1] == 'O'),
            (str_0[2] == 'O' and str_1[2] == 'O' and str_2[2] == 'O'),
            (str_0[3] == 'O' and str_1[3] == 'O' and str_2[3] == 'O'),
            (str_0[1] == 'O' and str_1[2] == 'O' and str_2[3] == 'O'),
            (str_0[3] == 'O' and str_1[2] == 'O' and str_2[1] == 'O')
        ]):
            # Объявляем победителя
            print('Победили нолики')
            win = True
            break

    else:
        # Меняем значение строки на значение с результатом хода
        pole[hod_y + 1] = str_zapolnenia

        # Задаем переменные для проверки условий победы
        str_0 = pole[1]
        str_1 = pole[2]
        str_2 = pole[3]

        # Проверяем условия победы, если да, звершаем цикл
        if any([
            pole[1] == ['0', 'X', 'X', 'X'],
            pole[2] == ['1', 'X', 'X', 'X'],
            pole[3] == ['2', 'X', 'X', 'X'],
            (str_0[1] == 'X' and str_1[1] == 'X' and str_2[1] == 'X'),
            (str_0[2] == 'X' and str_1[2] == 'X' and str_2[2] == 'X'),
            (str_0[3] == 'X' and str_1[3] == 'X' and str_2[3] == 'X'),
            (str_0[1] == 'X' and str_1[2] == 'X' and str_2[3] == 'X'),
            (str_0[3] == 'X' and str_1[2] == 'X' and str_2[1] == 'X')
        ]):
            # Объявляем победителя
            print('Победили крестики')
            win = True
            break

    # увеличиваем счетчик ходов на 1
    turn += 1

    # Выводим обновленное поле
    vyvod_polya()
    print('---------------------------------')

print('---------------------------------')
# Выводим итоговое поле
vyvod_polya()

# Если после 9 ходов победитель не определился, объявляем ничью
if not win:
    print('Ничья')

# Завершаем игру
print('Игра окончена')
